{"version":3,"file":"sw-v1.0.2.min.js","sources":["../../../../../src/js/pwa/sw.js"],"sourcesContent":["const cacheName = 'chirpy-{{ \"now\" | date: \"%Y%m%d.%H%M%S\" }}';\n\nfunction verifyDomain(url) {\n    for (const domain of allowedDomains) {\n        const regex = RegExp(`^http(s)?:\\/\\/${domain}\\/`);\n        if (regex.test(url)) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction isExcluded(url) {\n    for (const item of denyUrls) {\n        if (url === item) {\n            return true;\n        }\n    }\n    return false;\n}\n\nself.addEventListener('install', event => {\n    event.waitUntil(\n        caches.open(cacheName).then(cache => {\n            return cache.addAll(resource);\n        })\n    );\n});\n\nself.addEventListener('activate', event => {\n    event.waitUntil(\n        caches.keys().then(keyList => {\n            return Promise.all(\n                keyList.map(key => {\n                    if (key !== cacheName) {\n                        return caches.delete(key);\n                    }\n                })\n            );\n        })\n    );\n});\n\nself.addEventListener('message', (event) => {\n    if (event.data === 'SKIP_WAITING') {\n        self.skipWaiting();\n    }\n});\n\nself.addEventListener('fetch', event => {\n    event.respondWith(\n        caches.match(event.request).then(response => {\n            if (response) {\n                return response;\n            }\n\n            return fetch(event.request).then(response => {\n                const url = event.request.url;\n\n                if (event.request.method !== 'GET' ||\n                    !verifyDomain(url) ||\n                    isExcluded(url)) {\n                    return response;\n                }\n\n                /*\n                  see: <https://developers.google.com/web/fundamentals/primers/service-workers#cache_and_return_requests>\n                */\n                let responseToCache = response.clone();\n\n                caches.open(cacheName).then(cache => {\n                    /* console.log('[sw] Caching new resource: ' + event.request.url); */\n                    cache.put(event.request, responseToCache);\n                });\n\n                return response;\n            });\n        })\n    );\n});\n\n"],"names":["cacheName","verifyDomain","url","domain","isExcluded","item","event","cache","keyList","key","response","responseToCache"],"mappings":"AAAA,MAAMA,EAAY,6CAElB,SAASC,EAAaC,EAAK,CACvB,UAAWC,KAAU,eAEjB,GADc,OAAO,eAAiBA,CAAM,GAAI,EACtC,KAAKD,CAAG,EACd,MAAO,GAIf,MAAO,EACX,CAEA,SAASE,EAAWF,EAAK,CACrB,UAAWG,KAAQ,SACf,GAAIH,IAAQG,EACR,MAAO,GAGf,MAAO,EACX,CAEA,KAAK,iBAAiB,UAAWC,GAAS,CACtCA,EAAM,UACF,OAAO,KAAKN,CAAS,EAAE,KAAKO,GACjBA,EAAM,OAAO,QAAQ,CAC/B,CACT,CACA,CAAC,EAED,KAAK,iBAAiB,WAAYD,GAAS,CACvCA,EAAM,UACF,OAAO,KAAI,EAAG,KAAKE,GACR,QAAQ,IACXA,EAAQ,IAAIC,GAAO,CACf,GAAIA,IAAQT,EACR,OAAO,OAAO,OAAOS,CAAG,CAEhD,CAAiB,CACjB,CACS,CACT,CACA,CAAC,EAED,KAAK,iBAAiB,UAAYH,GAAU,CACpCA,EAAM,OAAS,gBACf,KAAK,YAAW,CAExB,CAAC,EAED,KAAK,iBAAiB,QAASA,GAAS,CACpCA,EAAM,YACF,OAAO,MAAMA,EAAM,OAAO,EAAE,KAAKI,GACzBA,GAIG,MAAMJ,EAAM,OAAO,EAAE,KAAKI,GAAY,CACzC,MAAMR,EAAMI,EAAM,QAAQ,IAE1B,GAAIA,EAAM,QAAQ,SAAW,OACzB,CAACL,EAAaC,CAAG,GACjBE,EAAWF,CAAG,EACd,OAAOQ,EAMX,IAAIC,EAAkBD,EAAS,QAE/B,cAAO,KAAKV,CAAS,EAAE,KAAKO,GAAS,CAEjCA,EAAM,IAAID,EAAM,QAASK,CAAe,CAC5D,CAAiB,EAEMD,CACvB,CAAa,CACJ,CACT,CACA,CAAC"}